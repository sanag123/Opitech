{"ast":null,"code":"import _asyncToGenerator from \"/Users/henry.acuna/StudioProjects/opitech/prueba/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nconst ELEMENT_DATA = [{\n  \"userId\": 1,\n  \"id\": 1,\n  \"title\": \"delectus aut autem\",\n  \"completed\": false\n}];\n/**\n * @title Adding and removing data when using an array-based datasource.\n */\n\nexport class AppComponent {\n  constructor() {\n    this.displayedColumns = ['userId', 'id', 'title', 'completed'];\n    this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n  }\n\n  ngOnInit() {\n    this.elementData();\n  }\n\n  elementData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        data\n      } = yield axios.get('https://jsonplaceholder.typicode.com/todos');\n      data.forEach(e => {\n        _this.dataSource.data.push(e);\n      });\n\n      _this.table.renderRows();\n    })();\n  }\n\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatTable, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  decls: 0,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {},\n  styles: [\".demo-table[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n  \\n  .demo-button-container[_ngcontent-%COMP%] {\\n    padding-bottom: 16px;\\n  }\\n  \\n  .demo-button[_ngcontent-%COMP%]    + .demo-button[_ngcontent-%COMP%] {\\n    margin-left: 8px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztFQUNiOztFQUVBO0lBQ0Usb0JBQW9CO0VBQ3RCOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbW8tdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZGVtby1idXR0b24tY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgfVxuICBcbiAgLmRlbW8tYnV0dG9uICsgLmRlbW8tYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xuICB9XG4gICJdfQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,QAAT,EAAmBC,kBAAnB,QAA4C,yBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAWA,MAAMC,YAAY,GAAsB,CACtC;EACE,UAAU,CADZ;EAEE,MAAM,CAFR;EAGE,SAAS,oBAHX;EAIE,aAAa;AAJf,CADsC,CAAxC;AASA;;;;AAQA,OAAM,MAAOC,YAAP,CAAmB;EALzBC;IAME,wBAA6B,CAAC,QAAD,EAAW,IAAX,EAAiB,OAAjB,EAA0B,WAA1B,CAA7B;IACA,kBAAa,IAAIJ,kBAAJ,CAAuBE,YAAvB,CAAb;EAmBD;;EAhBCG,QAAQ;IACN,KAAKC,WAAL;EACD;;EAEKA,WAAW;IAAA;;IAAA;MACf,MAAM;QAAEC;MAAF,UAAiBN,KAAK,CAACO,GAAN,CAAU,4CAAV,CAAvB;MACAD,IAAI,CAACE,OAAL,CAAcC,CAAD,IAAuB;QAClC,KAAI,CAACC,UAAL,CAAgBJ,IAAhB,CAAqBK,IAArB,CAA0BF,CAA1B;MACD,CAFD;;MAGA,KAAI,CAACG,KAAL,CAAWC,UAAX;IALe;EAMhB;;EAEDC,WAAW,CAACC,KAAD,EAAa;IACrB,MAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;IACA,KAAKR,UAAL,CAAgBS,MAAhB,GAAyBH,WAAW,CAACI,IAAZ,GAAmBC,WAAnB,EAAzB;EACF;;AApBsB;;;mBAAZnB;AAAY;;;QAAZA;EAAYoB;EAAAC;IAAA;qBAGZzB,UAAQ","names":["MatTable","MatTableDataSource","axios","ELEMENT_DATA","AppComponent","constructor","ngOnInit","elementData","data","get","forEach","e","dataSource","push","table","renderRows","applyFilter","event","filterValue","target","value","filter","trim","toLowerCase","selectors","viewQuery"],"sourceRoot":"","sources":["/Users/henry.acuna/StudioProjects/opitech/prueba/src/app/app.component.ts"],"sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\nimport { MatTable, MatTableDataSource} from '@angular/material/table';\nimport axios from 'axios';\n\nexport interface PeriodicElement {\n  userId: number;\n  id: number;\n  title: string\n  completed: boolean;\n}\n\n\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    \"userId\": 1,\n    \"id\": 1,\n    \"title\": \"delectus aut autem\",\n    \"completed\": false\n  }\n];\n\n/**\n * @title Adding and removing data when using an array-based datasource.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  displayedColumns: string[] = ['userId', 'id', 'title', 'completed'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n  @ViewChild(MatTable) table!: MatTable<PeriodicElement>;\n\n  ngOnInit() {\n    this.elementData();\n  }\n  \n  async elementData() {\n    const { data } = await axios.get('https://jsonplaceholder.typicode.com/todos');\n    data.forEach((e: PeriodicElement) => {\n      this.dataSource.data.push(e);\n    });\n    this.table.renderRows();\n  }\n\n  applyFilter(event: Event) {\n     const filterValue = (event.target as HTMLInputElement).value;\n     this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}