{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { merge, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/table\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\n\nfunction AppComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" User \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r23.userId, \" \");\n  }\n}\n\nfunction AppComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" Subject \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r24.id, \" \");\n  }\n}\n\nfunction AppComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" Customer \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r25 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r25.title, \" \");\n  }\n}\n\nfunction AppComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" Priority \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r26 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r26.completed, \" \");\n  }\n}\n\nfunction AppComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 25);\n  }\n}\n\nfunction AppComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 26);\n  }\n}\n\nfunction AppComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 27)(1, \"td\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(4);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"No data matching the filter \\\"\", _r0.value, \"\\\"\");\n  }\n}\n\nfunction AppComponent_div_24_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction AppComponent_div_24_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \" GitHub's API rate limit has been reached. It will be reset in one minute. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, AppComponent_div_24_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 30);\n    i0.ɵɵtemplate(2, AppComponent_div_24_div_2_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isLoadingResults);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isRateLimitReached);\n  }\n}\n\nfunction AppComponent_th_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"#\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r30 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r30.number);\n  }\n}\n\nfunction AppComponent_th_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"Title\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r31 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r31.title);\n  }\n}\n\nfunction AppComponent_th_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \"State\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r32 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r32.state);\n  }\n}\n\nfunction AppComponent_th_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 33);\n    i0.ɵɵtext(1, \" Created \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_td_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r33 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, row_r33.created_at));\n  }\n}\n\nfunction AppComponent_tr_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 25);\n  }\n}\n\nfunction AppComponent_tr_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 26);\n  }\n}\n\nconst ELEMENT_DATA = [{\n  \"userId\": 1,\n  \"id\": 1,\n  \"title\": \"delectus aut autem\",\n  \"completed\": false\n}];\n/**\n * @title Adding and removing data when using an array-based datasource.\n */\n// export class AppComponents {\n//   displayedColumns: string[] = ['userId', 'id', 'title', 'completed'];\n//   dataSource = [...ELEMENT_DATA];\n//   @ViewChild(MatTable) table!: MatTable<PeriodicElement>;\n//   async elementData() {\n//     const { data } = await axios.get('https://jsonplaceholder.typicode.com/todos');\n//     data.forEach((e: PeriodicElement) => {\n//       this.dataSource.push(e);\n//     });\n//     this.table.renderRows();\n//   }\n//   // applyFilter(event: Event) {\n//   //   const filterValue = (event.target as HTMLInputElement).value;\n//   //   this.table.filter = filterValue.trim().toLowerCase();\n//   // }\n// }\n\nexport class AppComponent {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this.displayedColumns = ['created', 'state', 'number', 'title'];\n    this.data = [];\n    this.resultsLength = 0;\n    this.isLoadingResults = true;\n    this.isRateLimitReached = false;\n  }\n\n  ngAfterViewInit() {\n    this.exampleDatabase = new ExampleHttpDatabase(this._httpClient); // If the user changes the sort order, reset back to the first page.\n\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page).pipe(startWith({}), switchMap(() => {\n      this.isLoadingResults = true;\n      return this.exampleDatabase.getRepoIssues(this.sort.active, this.sort.direction, this.paginator.pageIndex).pipe(catchError(() => observableOf(null)));\n    }), map(data => {\n      // Flip flag to show that loading has finished.\n      this.isLoadingResults = false;\n      this.isRateLimitReached = data === null;\n\n      if (data === null) {\n        return [];\n      } // Only refresh the result length if there is new data. In case of rate\n      // limit errors, we do not want to reset the paginator to zero, as that\n      // would prevent users from re-triggering requests.\n\n\n      this.resultsLength = data.total_count;\n      return data.items;\n    })).subscribe(data => this.data = data);\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n      i0.ɵɵviewQuery(MatSort, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n    }\n  },\n  decls: 42,\n  vars: 9,\n  consts: [[\"appearance\", \"standard\"], [\"matInput\", \"\", \"placeholder\", \"Ingrese filtro\"], [\"input\", \"\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", \"demo-table\", 3, \"dataSource\"], [\"matColumnDef\", \"userId\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"id\"], [\"matColumnDef\", \"title\"], [\"matColumnDef\", \"completed\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [1, \"example-container\", \"mat-elevation-z8\"], [\"class\", \"example-loading-shade\", 4, \"ngIf\"], [1, \"example-table-container\"], [\"mat-table\", \"\", \"matSort\", \"\", \"matSortActive\", \"created\", \"matSortDisableClear\", \"\", \"matSortDirection\", \"desc\", 1, \"example-table\", 3, \"dataSource\"], [\"matColumnDef\", \"number\"], [\"matColumnDef\", \"state\"], [\"matColumnDef\", \"created\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\", 4, \"matHeaderCellDef\"], [\"aria-label\", \"Select page of GitHub search results\", 3, \"length\", \"pageSize\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"mat-row\"], [\"colspan\", \"4\", 1, \"mat-cell\"], [1, \"example-loading-shade\"], [4, \"ngIf\"], [\"class\", \"example-rate-limit-reached\", 4, \"ngIf\"], [1, \"example-rate-limit-reached\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-form-field\", 0)(1, \"mat-label\");\n      i0.ɵɵtext(2, \"Filter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 1, 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n        return ctx.elementData();\n      });\n      i0.ɵɵtext(6, \" Refresh \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 4);\n      i0.ɵɵelementContainerStart(8, 5);\n      i0.ɵɵtemplate(9, AppComponent_th_9_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(10, AppComponent_td_10_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(11, 8);\n      i0.ɵɵtemplate(12, AppComponent_th_12_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(13, AppComponent_td_13_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(14, 9);\n      i0.ɵɵtemplate(15, AppComponent_th_15_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(16, AppComponent_td_16_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(17, 10);\n      i0.ɵɵtemplate(18, AppComponent_th_18_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(19, AppComponent_td_19_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(20, AppComponent_tr_20_Template, 1, 0, \"tr\", 11);\n      i0.ɵɵtemplate(21, AppComponent_tr_21_Template, 1, 0, \"tr\", 12);\n      i0.ɵɵtemplate(22, AppComponent_tr_22_Template, 3, 1, \"tr\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 14);\n      i0.ɵɵtemplate(24, AppComponent_div_24_Template, 3, 2, \"div\", 15);\n      i0.ɵɵelementStart(25, \"div\", 16)(26, \"table\", 17);\n      i0.ɵɵelementContainerStart(27, 18);\n      i0.ɵɵtemplate(28, AppComponent_th_28_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(29, AppComponent_td_29_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(30, 9);\n      i0.ɵɵtemplate(31, AppComponent_th_31_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(32, AppComponent_td_32_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(33, 19);\n      i0.ɵɵtemplate(34, AppComponent_th_34_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(35, AppComponent_td_35_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(36, 20);\n      i0.ɵɵtemplate(37, AppComponent_th_37_Template, 2, 0, \"th\", 21);\n      i0.ɵɵtemplate(38, AppComponent_td_38_Template, 3, 3, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(39, AppComponent_tr_39_Template, 1, 0, \"tr\", 11);\n      i0.ɵɵtemplate(40, AppComponent_tr_40_Template, 1, 0, \"tr\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(41, \"mat-paginator\", 22);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoadingResults || ctx.isRateLimitReached);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"dataSource\", ctx.data);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"length\", ctx.resultsLength)(\"pageSize\", 30);\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatTable, i3.MatHeaderCellDef, i3.MatHeaderRowDef, i3.MatColumnDef, i3.MatCellDef, i3.MatRowDef, i3.MatHeaderCell, i3.MatCell, i3.MatHeaderRow, i3.MatRow, i3.MatNoDataRow, i4.MatFormField, i4.MatLabel, i5.MatInput, i2.DatePipe],\n  styles: [\".demo-table[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n  \\n  .demo-button-container[_ngcontent-%COMP%] {\\n    padding-bottom: 16px;\\n  }\\n  \\n  .demo-button[_ngcontent-%COMP%]    + .demo-button[_ngcontent-%COMP%] {\\n    margin-left: 8px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztFQUNiOztFQUVBO0lBQ0Usb0JBQW9CO0VBQ3RCOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlbW8tdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZGVtby1idXR0b24tY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgfVxuICBcbiAgLmRlbW8tYnV0dG9uICsgLmRlbW8tYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xuICB9XG4gICJdfQ== */\"]\n});\n/** An example database that the data source uses to retrieve data for the table. */\n\nexport class ExampleHttpDatabase {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n\n  getRepoIssues(sort, order, page) {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl = `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\n    return this._httpClient.get(requestUrl);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["MatPaginator","MatSort","merge","of","observableOf","catchError","map","startWith","switchMap","i0","ELEMENT_DATA","AppComponent","constructor","_httpClient","ngAfterViewInit","exampleDatabase","ExampleHttpDatabase","sort","sortChange","subscribe","paginator","pageIndex","page","pipe","isLoadingResults","getRepoIssues","active","direction","data","isRateLimitReached","resultsLength","total_count","items","selectors","viewQuery","ctx","order","href","requestUrl","get"],"sourceRoot":"","sources":["/Users/henry.acuna/StudioProjects/opitech/prueba/src/app/app.component.ts","/Users/henry.acuna/StudioProjects/opitech/prueba/src/app/app.component.html"],"sourcesContent":["import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, SortDirection } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource} from '@angular/material/table';\nimport axios from 'axios';\nimport {HttpClient} from '@angular/common/http';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\n\nexport interface PeriodicElement {\n  userId: number;\n  id: number;\n  title: string\n  completed: boolean;\n}\n\n\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    \"userId\": 1,\n    \"id\": 1,\n    \"title\": \"delectus aut autem\",\n    \"completed\": false\n  }\n];\n\n/**\n * @title Adding and removing data when using an array-based datasource.\n */\n\n// export class AppComponents {\n//   displayedColumns: string[] = ['userId', 'id', 'title', 'completed'];\n//   dataSource = [...ELEMENT_DATA];\n\n//   @ViewChild(MatTable) table!: MatTable<PeriodicElement>;\n  \n//   async elementData() {\n//     const { data } = await axios.get('https://jsonplaceholder.typicode.com/todos');\n//     data.forEach((e: PeriodicElement) => {\n//       this.dataSource.push(e);\n//     });\n//     this.table.renderRows();\n//   }\n\n//   // applyFilter(event: Event) {\n//   //   const filterValue = (event.target as HTMLInputElement).value;\n//   //   this.table.filter = filterValue.trim().toLowerCase();\n//   // }\n// }\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n  displayedColumns: string[] = ['created', 'state', 'number', 'title'];\n  exampleDatabase!: ExampleHttpDatabase | null;\n  data: GithubIssue[] = [];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _httpClient: HttpClient) {}\n\n  ngAfterViewInit() {\n    this.exampleDatabase = new ExampleHttpDatabase(this._httpClient);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.exampleDatabase!.getRepoIssues(\n            this.sort.active,\n            this.sort.direction,\n            this.paginator.pageIndex,\n          ).pipe(catchError(() => observableOf(null)));\n        }),\n        map(data => {\n          // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = data === null;\n\n          if (data === null) {\n            return [];\n          }\n\n          // Only refresh the result length if there is new data. In case of rate\n          // limit errors, we do not want to reset the paginator to zero, as that\n          // would prevent users from re-triggering requests.\n          this.resultsLength = data.total_count;\n          return data.items;\n        }),\n      )\n      .subscribe(data => (this.data = data));\n  }\n}\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDatabase {\n  constructor(private _httpClient: HttpClient) {}\n\n  getRepoIssues(sort: string, order: SortDirection, page: number): Observable<GithubApi> {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl = `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${\n      page + 1\n    }`;\n\n    return this._httpClient.get<GithubApi>(requestUrl);\n  }\n}","<mat-form-field appearance=\"standard\">\n  <mat-label>Filter</mat-label>\n  <input matInput placeholder=\"Ingrese filtro\" #input>\n</mat-form-field>\n<button mat-raised-button (click)=\"elementData()\"> Refresh </button>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 demo-table\">\n\n  <!-- User Name Column -->\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef> User </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.userId}} </td>\n  </ng-container>\n\n  <!-- Subject Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> Subject </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container>\n\n  <!-- Customers Column -->\n  <ng-container matColumnDef=\"title\">\n    <th mat-header-cell *matHeaderCellDef> Customer </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n  </ng-container>\n\n  <!-- Priority Column -->\n  <ng-container matColumnDef=\"completed\">\n    <th mat-header-cell *matHeaderCellDef> Priority </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.completed}} </td>\n  </ng-container>\n  \n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  <!-- Row shown when there is no matching data. -->\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n  </tr>\n</table>\n\n\n<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-loading-shade\"\n       *ngIf=\"isLoadingResults || isRateLimitReached\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n      GitHub's API rate limit has been reached. It will be reset in one minute.\n    </div>\n  </div>\n\n  <div class=\"example-table-container\">\n\n    <table mat-table [dataSource]=\"data\" class=\"example-table\"\n           matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n      <!-- Number Column -->\n      <ng-container matColumnDef=\"number\">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.number}}</td>\n      </ng-container>\n\n      <!-- Title Column -->\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef>Title</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n      </ng-container>\n\n      <!-- State Column -->\n      <ng-container matColumnDef=\"state\">\n        <th mat-header-cell *matHeaderCellDef>State</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\n      </ng-container>\n\n      <!-- Created Column -->\n      <ng-container matColumnDef=\"created\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n          Created\n        </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n\n  <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\" aria-label=\"Select page of GitHub search results\"></mat-paginator>\n</div>\n"]},"metadata":{},"sourceType":"module"}